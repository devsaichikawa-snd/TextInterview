# Generated by Django 4.2.13 on 2024-07-08 10:35

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Inquiry",
            fields=[
                (
                    "inquiry_id",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="問合せコード",
                    ),
                ),
                ("user_id", models.UUIDField(verbose_name="利用者コード")),
                (
                    "user_name",
                    models.CharField(
                        max_length=255, verbose_name="ユーザー名"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255, verbose_name="メールアドレス"
                    ),
                ),
                (
                    "inquiry_type",
                    models.IntegerField(verbose_name="問合せ種別"),
                ),
                (
                    "subject",
                    models.CharField(max_length=200, verbose_name="件名"),
                ),
                (
                    "message_body",
                    models.CharField(
                        max_length=1200, verbose_name="問合せ本文"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "t_inquiry",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "question_id",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="質問コード",
                    ),
                ),
                (
                    "category_id",
                    models.IntegerField(verbose_name="分類コード"),
                ),
                (
                    "content",
                    models.CharField(max_length=400, verbose_name="質問本文"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "m_question",
            },
        ),
        migrations.CreateModel(
            name="QuestionCategory",
            fields=[
                (
                    "category_id",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="分類コード",
                    ),
                ),
                (
                    "category_name",
                    models.CharField(max_length=100, verbose_name="分類名称"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "m_question_category",
            },
        ),
        migrations.CreateModel(
            name="UserAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question_id",
                    models.IntegerField(verbose_name="質問コード"),
                ),
                ("user_id", models.UUIDField(verbose_name="個人コード")),
                (
                    "answer",
                    models.CharField(max_length=1200, verbose_name="回答内容"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "t_user_answer",
                "unique_together": {("question_id", "user_id")},
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "user_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "user_name",
                    models.CharField(
                        max_length=255, verbose_name="ユーザー名"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255,
                        unique=True,
                        verbose_name="メールアドレス",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        max_length=128, verbose_name="パスワード"
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="最終ログイン記録"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
